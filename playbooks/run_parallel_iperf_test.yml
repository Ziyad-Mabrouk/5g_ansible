---
- name: Run iperf3 tests sequentially on first 4 UEs
  hosts: faraday
  gather_facts: false
  vars:
    ue1: "{{ groups['qhats'][0] }}"
    ue2: "{{ groups['qhats'][1] }}"
    ue3: "{{ groups['qhats'][2] }}"
    ue4: "{{ groups['qhats'][3] }}"
  tasks:
    - name: Start iperf3 on {{ ue1 }} in background
      shell: >
        ssh root@{{ ue1 }}
        'iperf3 -c {{ hostvars[ue1].upf_ip }} --bidir -t 400 -J log_iperf_test.json'
      async: 1800
      poll: 0
      register: ue1_job

    - name: Wait 100 seconds before next UE
      wait_for:
        timeout: 100

    - name: Start iperf3 on {{ ue2 }} in background
      shell: >
        ssh root@{{ ue2 }}
        'iperf3 -c {{ hostvars[ue2].upf_ip }} --bidir -t 400 -J log_iperf_test.json'
      async: 1800
      poll: 0
      register: ue2_job

    - name: Wait 100 seconds before next UE
      wait_for:
        timeout: 100

    - name: Start iperf3 on {{ ue3 }} in background
      shell: >
        ssh root@{{ ue3 }}
        'iperf3 -c {{ hostvars[ue3].upf_ip }} --bidir -p 5202 -t 400 -J log_iperf_test.json'
      async: 1800
      poll: 0
      register: ue3_job

    - name: Wait 100 seconds before next UE
      wait_for:
        timeout: 100

    - name: Start iperf3 on {{ ue4 }} in background
      shell: >
        ssh root@{{ ue4 }}
        'iperf3 -c {{ hostvars[ue4].upf_ip }} --bidir -p 5202 -t 400 -J log_iperf_test.json'
      async: 1800
      poll: 0
      register: ue4_job

- name: Wait for the last iperf job to finish
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Wait for iperf job
      async_status:
        jid: "{{ ue4_job.ansible_job_id }}"
      register: result
      until: result.finished
      retries: 100
      delay: 10
