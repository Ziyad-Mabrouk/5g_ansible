---
- name: Run iperf test
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Start bidirectional iperf3 on first UE in background for 5 minutes
      shell: >
        ssh root@{{ groups['qhats'][0] }} 
        'iperf3 -c {{ hostvars[groups["qhats"][0]].upf_ip }} --bidir -t 300 -J log_interference_test.json'
      delegate_to: faraday.inria.fr
      async: 1800
      poll: 0
      register: iperf_job

    - name: Wait 100 seconds before running noise generator
      wait_for:
        timeout: 100

- name: Run noise generator from fit node for 100 seconds
  hosts: faraday
  vars:
    node: "{{ groups['fit_nodes'][1] }}"
    time: 100
  roles:
    - role: scenarios/interference/run
      when: hostvars[groups['faraday'][0]].interference_usrp == 'fit'

- name: Run noise generator from USRP for 100 seconds
  hosts: faraday
  vars:
    node: "{{ hostvars[groups['faraday'][0]].interference_usrp }}"
    time: 100
  roles:
    - role: scenarios/interference/run
      when: hostvars[groups['faraday'][0]].interference_usrp in ['n300', 'n320']

- name: Wait for iperf job to finish
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Wait for iperf job
      async_status:
        jid: "{{ iperf_job.ansible_job_id }}"
      register: result
      until: result.finished
      retries: 100
      delay: 10
