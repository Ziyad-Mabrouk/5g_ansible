---
- name: Setup iperf3 on UPFs
  hosts: core_node
  gather_facts: false
  roles:
    - role: scenarios/iperf/upf

- name: Run iperf3 on UEs
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Start iperf3 DL test for UE1 in background
      shell: ssh root@qhat01 'iperf3 -c {{ hostvars[qhat01].upf_ip }} -B {{ hostvars[ue].ip }} -t 200 -R -J log_dl.json'
      delegate_to: faraday.inria.fr
      async: 1800
      poll: 0
      register: down_job_1

    - name: Start iperf3 UL test for UE2 in background
      shell: ssh root@qhat02 'iperf3 -c {{ hostvars[qhat02].upf_ip }} -B {{ hostvars[ue].ip }} -t 200 -J log_ul.json'
      delegate_to: faraday.inria.fr
      async: 1800
      poll: 0
      register: down_job_2

    - name: Start iperf3 DL test for UE3 in background
      shell: ssh root@qaht03 'iperf3 -c {{ hostvars[qhat03].upf_ip }} -B {{ hostvars[ue].ip }} -t 200 -R -J log_dl.json'
      delegate_to: faraday.inria.fr
      async: 1800
      poll: 0
      register: up_job_1

- name: Run interference test on R2Lab
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Wait 60 seconds before running noise generator
      wait_for:
        timeout: 60

    - name: Run noise generator
      include_role:
        name: scenarios/interference/run

- name: Wait for iperf3 Downlink tests to finish
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Remove limit on qhat01
      shell: |
        ssh root@qhat01 'tc qdisc del dev wwan0 root'
      delegate_to: faraday.inria.fr

    - name: Wait for DL jobs
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: result
      until: result.finished
      retries: 100
      delay: 10
      loop: "{{ down_job_1.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: Wait for DL jobs
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: result
      until: result.finished
      retries: 100
      delay: 10
      loop: "{{ down_job_2.results }}"
      loop_control:
        label: "{{ item.item }}"

- name: Wait for iperf3 Uplink tests to finish
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Wait for UL jobs
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: result
      until: result.finished
      retries: 100
      delay: 10
      loop: "{{ up_job_1.results }}"
      loop_control:
        label: "{{ item.item }}"