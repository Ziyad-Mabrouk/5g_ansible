---
- name: Install metrics-server for resource monitoring
  hosts: monitor_node
  become: true
  tasks:
    - name: Add metrics-server Helm repo
      command: helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server
      args:
        creates: ~/.cache/helm/repository/metrics-server-index.yaml

    - name: Update Helm repos
      command: helm repo update

    - name: Install metrics-server with initial configuration
      command: >
        helm install metrics-server metrics-server/metrics-server -n kube-system
        --set args="{--kubelet-insecure-tls,--kubelet-preferred-address-types=InternalIP,Hostname}"
      register: install_output
      failed_when: install_output.rc != 0 and 'already exists' not in install_output.stderr

    - name: Upgrade metrics-server (to apply args safely)
      command: >
        helm upgrade metrics-server metrics-server/metrics-server
        -n kube-system
        --reuse-values
        --set args="{--kubelet-insecure-tls,--kubelet-preferred-address-types=InternalIP,Hostname}"

- name: Ensure monitoring script is deployed
  hosts: monitor_node
  gather_facts: false
  tasks:
    - name: Copy monitoring script to monitor_node
      copy:
        src: files/collect_monitoring.sh
        dest: /tmp/collect_monitoring.sh
        mode: '0755'

- name: Run monitoring with 0 UEs
  hosts: monitor_node
  gather_facts: false
  tasks:
    - name: Run monitoring for UE count 0
      shell: /tmp/collect_monitoring.sh 0
      register: upload_result

    - name: Show bashupload link for UE 0
      debug:
        var: upload_result.stdout_lines

- name: Connect UE 1 and monitor
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Connect UE 1
      include_role:
        name: r2lab/ue/connect
      vars:
        ue: "{{ groups['qhats'][0] }}"

- name: Monitor after connecting UE 1
  hosts: monitor_node
  gather_facts: false
  tasks:
    - name: Run monitoring for UE count 1
      shell: /tmp/collect_monitoring.sh 1
      register: upload_result

    - name: Show bashupload link for UE 1
      debug:
        var: upload_result.stdout_lines

- name: Connect UE 2 and monitor
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Connect UE 2
      include_role:
        name: r2lab/ue/connect
      vars:
        ue: "{{ groups['qhats'][1] }}"

- name: Monitor after connecting UE 2
  hosts: monitor_node
  gather_facts: false
  tasks:
    - name: Run monitoring for UE count 2
      shell: /tmp/collect_monitoring.sh 2
      register: upload_result

    - name: Show bashupload link for UE 2
      debug:
        var: upload_result.stdout_lines

- name: Connect UE 3 and monitor
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Connect UE 3
      include_role:
        name: r2lab/ue/connect
      vars:
        ue: "{{ groups['qhats'][2] }}"

- name: Monitor after connecting UE 3
  hosts: monitor_node
  gather_facts: false
  tasks:
    - name: Run monitoring for UE count 3
      shell: /tmp/collect_monitoring.sh 3
      register: upload_result

    - name: Show bashupload link for UE 3
      debug:
        var: upload_result.stdout_lines

- name: Connect UE 4 and monitor
  hosts: faraday
  gather_facts: false
  tasks:
    - name: Connect UE 4
      include_role:
        name: r2lab/ue/connect
      vars:
        ue: "{{ groups['qhats'][3] }}"

- name: Monitor after connecting UE 4
  hosts: monitor_node
  gather_facts: false
  tasks:
    - name: Run monitoring for UE count 4
      shell: /tmp/collect_monitoring.sh 4
      register: upload_result

    - name: Show bashupload link for UE 4
      debug:
        var: upload_result.stdout_lines