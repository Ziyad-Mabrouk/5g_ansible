---
- name: Get list of UPF pods
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: open5gs
  register: upf_pods

- set_fact:
    upf1_pod: "{{ item.metadata.name }}"
  loop: "{{ upf_pods.resources }}"
  when: item.metadata.name is match('^open5gs-upf1-')

- set_fact:
    upf2_pod: "{{ item.metadata.name }}"
  loop: "{{ upf_pods.resources }}"
  when: item.metadata.name is match('^open5gs-upf2-')

- name: Install iperf3 in UPF1
  shell: |
    kubectl -n open5gs exec {{ upf1_pod }} -- bash -c '
      set -euo pipefail
      if ! command -v iperf3 >/dev/null 2>&1; then
        apt-get update -qq &&
        DEBIAN_FRONTEND=noninteractive apt-get install -y -qq iperf3
      fi
    '
  register: upf1_install
  changed_when: "'Preparing to unpack' in upf1_install.stdout"

- name: Install iperf3 in UPF2
  shell: |
    kubectl -n open5gs exec {{ upf2_pod }} -- bash -c '
      set -euo pipefail
      if ! command -v iperf3 >/dev/null 2>&1; then
        apt-get update -qq &&
        DEBIAN_FRONTEND=noninteractive apt-get install -y -qq iperf3
      fi
    '
  register: upf2_install
  changed_when: "'Preparing to unpack' in upf2_install.stdout"

- name: Start iperf3 server on UPF1 (background)
  shell: |
    kubectl -n open5gs exec {{ upf1_pod }} -- bash -c 'iperf3 -s -B 10.41.0.1 -D'

- name: Start iperf3 server on UPF2 (background)
  shell: |
    kubectl -n open5gs exec {{ upf2_pod }} -- bash -c 'iperf3 -s -B 10.42.0.1 -D'
