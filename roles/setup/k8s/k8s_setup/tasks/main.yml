---
- name: Update apt cache and install Kubernetes components
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes
  become: true

- name: Add Kubernetes and RT settings to sysctl.conf
  blockinfile:
    path: /etc/sysctl.conf
    insertafter: EOF
    block: |
      ## For kubernetes
      fs.inotify.max_user_instances=65536
      ## Realtime kernel settings
      kernel.sched_rt_runtime_us=-1
      kernel.timer_migration=0
    marker: "# {mark} RAN tuning"
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Ensure kubelet extra configuration is applied
  copy:
    dest: /etc/kubernetes/kubelet-config.yaml
    content: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      cgroupDriver: systemd
      cpuManagerPolicy: static
      cpuManagerPolicyOptions:
        "full-pcpus-only": "true"
      reservedSystemCPUs: 0-7
      memorySwap: {}
      failSwapOn: false
      containerLogMaxSize: 50Mi
      featureGates:
        CPUManager: true
        CPUManagerPolicyOptions: true
        CPUManagerPolicyBetaOptions: true
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Ensure kube-proxy config is set
  copy:
    dest: /etc/kubernetes/kubeproxy-config.yaml
    content: |
      apiVersion: kubeproxy.config.k8s.io/v1alpha1
      kind: KubeProxyConfiguration
      ipvs:
        strictARP: true
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Patch kubelet systemd service to use custom config
  become: true
  block:
    - name: Create systemd drop-in directory for kubelet if not exists
      file:
        path: /etc/systemd/system/kubelet.service.d
        state: directory

    - name: Create or update kubelet drop-in override to set config
      copy:
        dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        content: |
          [Service]
          ExecStart=
          ExecStart=/usr/bin/kubelet --config=/etc/kubernetes/kubelet-config.yaml
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Patch kube-proxy DaemonSet to use custom config file
  shell: |
    kubectl -n kube-system patch daemonset kube-proxy --patch "$(cat <<EOF
    spec:
      template:
        spec:
          containers:
          - name: kube-proxy
            command:
            - /usr/local/bin/kube-proxy
            - --config=/var/lib/kube-proxy/kubeproxy-config.yaml
            volumeMounts:
            - name: kube-proxy-config
              mountPath: /var/lib/kube-proxy
          volumes:
          - name: kube-proxy-config
            hostPath:
              path: /etc/kubernetes
              type: Directory
    EOF
    )"
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Copy kube-proxy config to expected path on node
  become: true
  copy:
    src: /etc/kubernetes/kubeproxy-config.yaml
    dest: /etc/kubernetes/kubeproxy-config.yaml
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Reload sysctl
  command: sysctl -p
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']

- name: Restart kubelet
  systemd:
    name: kubelet
    state: restarted
  when: inventory_hostname == groups['ran_node'][0] and hostvars[groups['faraday'][0]].rru in ['jaguar', 'panther']
